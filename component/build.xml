<!--
  ~ Version: MPL 1.1/GPL 2.0/LGPL 2.1
  ~
  ~ "The contents of this file are subject to the Mozilla Public License
  ~ Version 1.1 (the "License"); you may not use this file except in
  ~ compliance with the License. You may obtain a copy of the License at
  ~ http://www.mozilla.org/MPL/
  ~
  ~ Software distributed under the License is distributed on an "AS IS"
  ~ basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  ~ License for the specific language governing rights and limitations under
  ~ the License.
  ~
  ~ The Original Code is ICEfaces 1.5 open source software code, released
  ~ November 5, 2006. The Initial Developer of the Original Code is ICEsoft
  ~ Technologies Canada, Corp. Portions created by ICEsoft are Copyright (C)
  ~ 2004-2006 ICEsoft Technologies Canada, Corp. All Rights Reserved.
  ~
  ~ Contributor(s): _____________________.
  ~
  ~ Alternatively, the contents of this file may be used under the terms of
  ~ the GNU Lesser General Public License Version 2.1 or later (the "LGPL"
  ~ License), in which case the provisions of the LGPL License are
  ~ applicable instead of those above. If you wish to allow use of your
  ~ version of this file only under the terms of the LGPL License and not to
  ~ allow others to use your version of this file under the MPL, indicate
  ~ your decision by deleting the provisions above and replace them with
  ~ the notice and other provisions required by the LGPL License. If you do
  ~ not delete the provisions above, a recipient may use your version of
  ~ this file under either the MPL or the LGPL License."
  ~
  -->

<project name="icefaces-comps" default="jar.components">

    <property name="src.dir"           location="src"/>
    <property name="build.dir"         location="build"/>
    <property name="build.classes.dir" location="${build.dir}/classes"/>
    <property name="test.classes.dir"  location="${build.dir}/test-classes"/>
    <property name="build.doc.dir"     location="${build.dir}/doc"/>
    <property name="build.api.doc.dir" location="${build.doc.dir}/api"/>
    <property name="build.tld.doc.dir" location="${build.doc.dir}/tld"/>
    <property name="dist.dir"          location="dist"/>
    <property name="lib.dir"           location="../lib"/>

    <property name="generate.taglib.src" location="./build/generate/src"/>
    <property name="tld.file"            location="./build/generate/src/icefaces_component.tld"/>
    <property name="facelets.file"       location="./conf/META-INF/facelet/icefaces.taglib.xml"/>

    <property name="build.sysclasspath" value="ignore"/>
    <property name="compile.debug"      value="true"/>

    <property name="company" value="ICEsoft Technologies, Inc."/>
    <property name="product" value="ICEfaces"/>
    <property name="version.primary" value="x"/>
    <property name="version.secondary" value="x"/>
    <property name="version.tertiary" value="x"/>
    <property name="release.type" value="x"/>
    <property name="build.number" value="x"/>

    <tstamp>
        <format property="buildtime" pattern="yyyy-MM-dd HH:mm z" locale="en"/>
    </tstamp>

    <path id="compile.run.classpath">
        <pathelement location="${build.classes.dir}"/>
        <fileset dir="${lib.dir}" includes="*.jar" excludes="jsf-api-1.2.jar,${ant.project.name}.jar"/>
    </path>
    <path id="compile.test.classpath">
        <pathelement location="${build.classes.dir}"/>
        <fileset dir="../component-metadata/target" includes="*.jar"/>
        <fileset dir="${lib.dir}" includes="*.jar" excludes="jsf-api.jar, jsf-impl.jar, ${ant.project.name}.jar"/>
    </path>

    <macrodef name="build.jar">
        <element name="add.metainfs" optional="true"/>
        <sequential>
            <delete file="${dist.dir}/${ant.project.name}.jar"/>
            <mkdir   dir="${dist.dir}"/>
            <jar destfile="${dist.dir}/${ant.project.name}.jar" duplicate="fail">
                <fileset dir="${build.classes.dir}"/>
                <fileset dir="${src.dir}" excludes="**/*.java"/>
                <manifest>
                    <section name="com.icesoft.faces">
                        <attribute name="Implementation-Title" value="${product}"/>
                        <attribute name="Implementation-Version" value="${release.type} ${version.primary}.${version.secondary}.${version.tertiary}_${build.number} (${buildtime})"/>
                        <attribute name="Implementation-Vendor" value="${company}"/>
                    </section>
                </manifest>
                <add.metainfs/>
            </jar>
            <copy file="${dist.dir}/${ant.project.name}.jar" todir="${lib.dir}" overwrite="true"/>
        </sequential>
    </macrodef>

    <macrodef name="gen.tld.doc">
        <attribute name="tld.file"/>
        <sequential>
            <delete dir="${build.tld.doc.dir}"/>
            <java jar="${lib.dir}/tlddoc.jar" fork="true" failonerror="true">
                <arg value="-d"/>
                <arg value="${build.tld.doc.dir}"/>
                <arg value="-doctitle"/>
                <arg value="ICEfaces Custom Components"/>
                <arg value="-windowtitle"/>
                <arg value="ICEfaces Custom Components"/>
                <arg value="@{tld.file}"/>
            </java>
        </sequential>
    </macrodef>

    <target name="compile" depends="generate.metadata">
        <delete dir="${build.classes.dir}"/>
        <mkdir  dir="${build.classes.dir}"/>

        <javac destdir="${build.classes.dir}" sourcepath=""
            debug="${compile.debug}" source="1.4" target="1.4"
        >
            <classpath refid="compile.run.classpath"/>
            <src location="${src.dir}"/>
            <src location="${generate.taglib.src}"/>
            <include name="**/*.java"/>
        </javac>
    </target>

    <target name="gen.facelets.file" depends="compile">
        <java classname="com.icesoft.faces.webapp.parser.TagToComponentMap"
            fork="true" failonerror="true"
            error="${build.dir}/gen.facelets.file.error.txt"
            output="${build.dir}/gen.facelets.file.output.txt"
        >
            <arg value="facelets"/>
            <arg value="${facelets.file}"/>
            <arg value="${tld.file}"/>
            <classpath refid="compile.run.classpath"/>
        </java>
    </target>

    <target name="jar.components" depends="gen.facelets.file, test">
        <build.jar>
            <add.metainfs>
                <metainf dir="../component-metadata/target/classes/conf" includes="faces-config.xml"/>
                <metainf dir="conf/META-INF" excludes="myfaces/"/>
                <metainf dir="./build/generate/src/" includes="*.tld"/>
            </add.metainfs>
        </build.jar>
    </target>

    <target name="tlddoc">
        <gen.tld.doc tld.file="${tld.file}"/>
    </target>

    <target name="javadoc">
        <delete dir="${build.api.doc.dir}"/>
        <javadoc packagenames="com.icesoft.faces.component.*"

               failonerror="true"

               defaultexcludes="yes"

               destdir="${build.api.doc.dir}"

               version="true"

               use="true"

               windowtitle="ICEfaces components">

        <fileset dir="${src.dir}" casesensitive="yes">

            <include name="**/*.java"/>

            <exclude name="**/*Tag.java"/>

            <exclude name="**/*Renderer.java"/>

            <exclude name="**/event/*.java"/>

            <exclude name="**/event/faces/*.java"/>

            <exclude name="**/util/*.java"/>

            <exclude name="**/taglib/*.java"/>

            <exclude name="**/utils/*.java"/>

        </fileset>

        <classpath refid="compile.run.classpath"/>

        <doctitle><![CDATA[<h1>ICEFaces</h1><br/><p>The API Javadocs for the ice components</p>]]></doctitle>

      </javadoc>
    </target>

    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>

    <target name="generate.metadata">
        <ant antfile="../component-metadata/build.xml"
     target="jar" inheritAll="false"/>

        <copy todir="build/generate/src">
    <fileset dir="../component-metadata/target/generated-sources/taglib/main/java" includes="**/*.java"/>
  </copy>
  <copy todir="build/generate/src">
    <fileset dir="../component-metadata/target/generated-sources/tld" includes="**/*.tld"/>
  </copy>
    </target>

    <target name="compile-tests" depends="junit-present, compile" description="Compile the test code" if="junit.present">
        
        <mkdir dir="${test.classes.dir}"/>
        <javac destdir="${test.classes.dir}" excludes="**/package.html" debug="true" optimize="false">
            <src>
                <pathelement location="test/java" />
                <pathelement location="../component-metadata/target/generated-sources/testbeaninfo/main/java"/>
                <pathelement location="../component-metadata/target/generated-sources/component/main/java"/>
            </src>
            <classpath>
                <path refid="compile.test.classpath"/>           
                <pathelement location="${ant.home}/lib/junit.jar"/>                
            </classpath>
        </javac>
    </target>

    <target name="test" depends="junit-present, compile-tests" if="junit.present" description="Run the test cases">
        <mkdir dir="${test.classes.dir}/test-reports" />
        <junit printSummary="yes" haltonerror="true" haltonfailure="true" fork="yes" dir=".">
            <sysproperty key="basedir" value="." />
            <formatter type="plain" />
            <classpath>
                <pathelement path="${test.classes.dir}"/>          
                <pathelement path="${build.classes.dir}"/> 
                <path refid="compile.test.classpath"/>    
                <pathelement path="${src.dir}"/>
            </classpath>
            <batchtest todir="${test.classes.dir}/test-reports">
                <fileset dir="test/java">
                    <include name="**/*Test.java" />
                    <exclude name="**/*Abstract*Test.java" />
                </fileset>
            </batchtest>
        </junit>
    </target>
    <target name="test-junit-present" unless="skip.test">
        <available classname="junit.framework.Test" property="junit.present" />
    </target>
    <target name="junit-present" depends="test-junit-present" unless="junit.present">
        <echo>================================= WARNING ================================</echo>
        <echo> Property 'skip.test' set OR </echo>
        <echo> Junit isn&apos;t present in your $ANT_HOME/lib directory. Tests not executed. </echo>
        <echo>==========================================================================</echo>
    </target>
</project>
