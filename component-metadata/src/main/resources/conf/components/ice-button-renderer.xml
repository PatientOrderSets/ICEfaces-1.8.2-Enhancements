<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~  Version: MPL 1.1/GPL 2.0/LGPL 2.1
  ~
  ~  "The contents of this file are subject to the Mozilla Public License
  ~  Version 1.1 (the "License"); you may not use this file except in
  ~  compliance with the License. You may obtain a copy of the License at
  ~  http://www.mozilla.org/MPL/
  ~
  ~  Software distributed under the License is distributed on an "AS IS"
  ~  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  ~  License for the specific language governing rights and limitations under
  ~  the License.
  ~
  ~  The Original Code is ICEfaces 1.5 open source software code, released
  ~  November 5, 2006. The Initial Developer of the Original Code is ICEsoft
  ~  Technologies Canada, Corp. Portions created by ICEsoft are Copyright (C)
  ~  2004-2006 ICEsoft Technologies Canada, Corp. All Rights Reserved.
  ~
  ~  Contributor(s): _____________________.
  ~
  ~  Alternatively, the contents of this file may be used under the terms of
  ~  the GNU Lesser General Public License Version 2.1 or later (the "LGPL"
  ~  License), in which case the provisions of the LGPL License are
  ~  applicable instead of those above. If you wish to allow use of your
  ~  version of this file only under the terms of the LGPL License and not to
  ~  allow others to use your version of this file under the MPL, indicate
  ~  your decision by deleting the provisions above and replace them with
  ~  the notice and other provisions required by the LGPL License. If you do
  ~  not delete the provisions above, a recipient may use your version of
  ~  this file under either the MPL or the LGPL License."
  ~
  -->

<renderer>
	<description>
		<![CDATA[<p>Renders an HTML "input" element.</p><p>Decode Behavior</p><ul><p>Obtain the <code>Map</code> from the "requestParameterMap"
          property of the <code>ExternalContext</code>.  If the value in the
          <code>Map</code> for the value of the "clientId" property of the
          component is <code>null</code>, create a String by concatenating
          the value of the "clientId" property of the component with the
          String ".x" (without the quotes).  Create another String in the
          same manner, but concatenate ".y" (without the quotes).  If
          <code>null</code> is the value in the <code>Map</code> for both
          Strings, return from <code>decode()</code>.  If the value in the
          <code>Map</code> for the value of the "clientId" property of the
          component is not <code>null</code>, get the value of the "type"
          attribute, and convert it to lower case.  If the result is equal
          to the String "reset" (without the quotes), return from
          <code>decode()</code>.  Otherwise, create a
          <code>javax.faces.event.ActionEvent</code> around the component,
          and pass it to the <code>queueEvent()</code> method of the
          component, which must be an instance of
          <code>UICommand</code>.</p></ul><p>Encode Behavior</p><ul><p>Render the clientId of the component as the value of the
          "name" attribute.  Render the current value of the component as
          the value of the "value" attribute.  If the "styleClass" attribute
          is specified, render its value as the value of the "class"
          attribute.</p></ul>]]>
	</description>
	<component-family>javax.faces.Command</component-family>

	<renderer-type>com.icesoft.faces.Button</renderer-type>

			<renderer-extension>
				<instance-name>button</instance-name>
				<is-container>false</is-container>
				<renders-children>fale</renders-children>
				<tag-name>commandButton</tag-name>
				<taglib-prefix>@taglib-prefix@</taglib-prefix>
				<taglib-uri>@taglib-uri@</taglib-uri>
			</renderer-extension>

</renderer>
