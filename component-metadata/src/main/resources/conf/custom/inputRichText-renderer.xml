<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~  Version: MPL 1.1/GPL 2.0/LGPL 2.1
  ~
  ~  "The contents of this file are subject to the Mozilla Public License
  ~  Version 1.1 (the "License"); you may not use this file except in
  ~  compliance with the License. You may obtain a copy of the License at
  ~  http://www.mozilla.org/MPL/
  ~
  ~  Software distributed under the License is distributed on an "AS IS"
  ~  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  ~  License for the specific language governing rights and limitations under
  ~  the License.
  ~
  ~  The Original Code is ICEfaces 1.5 open source software code, released
  ~  November 5, 2006. The Initial Developer of the Original Code is ICEsoft
  ~  Technologies Canada, Corp. Portions created by ICEsoft are Copyright (C)
  ~  2004-2006 ICEsoft Technologies Canada, Corp. All Rights Reserved.
  ~
  ~  Contributor(s): _____________________.
  ~
  ~  Alternatively, the contents of this file may be used under the terms of
  ~  the GNU Lesser General Public License Version 2.1 or later (the "LGPL"
  ~  License), in which case the provisions of the LGPL License are
  ~  applicable instead of those above. If you wish to allow use of your
  ~  version of this file only under the terms of the LGPL License and not to
  ~  allow others to use your version of this file under the MPL, indicate
  ~  your decision by deleting the provisions above and replace them with
  ~  the notice and other provisions required by the LGPL License. If you do
  ~  not delete the provisions above, a recipient may use your version of
  ~  this file under either the MPL or the LGPL License."
  ~
  -->

<renderer>
         <description>
             <![CDATA[
             <p>The ICEfaces inputRichText component uses the FCKEditor API to 
             provide JSF based rich text component.<br/>
             The "customConfigPath" attribute can be used to defined the custom 
             config.js where you can customize the FCKeditor including 
             the custom toolbar and the css.<p>
             The following steps are involved in creating the custom toolbar:
             <ol>
             <li>
             Create a config file under the webapp, defining the custom toolbar(e.g.)
             <u>js/config.js</u><br/>
             FCKConfig.ToolbarSets["MyToolbar"] = [['Bold','Italic', 'Underline'], ['Save']] ;
             </li>
             <li>
             Set the "toolbar" attribute on the inputRichText component to 
             define the custom toolbar name and set the "customConfigPath" attribute to
             reference the custom config.js.(e.g.) <br/>
             &lt;ice:inputRichText toolbar="MyToolbar"  customConfigPath="js/config.js"/&gt;
             </li>
             </ol>
             
<p >The following steps are involved in defining the custom CSS:</p>
<ol>
    <li>
        Copy the fck_editorarea.css from the FCKeditor distribution to your app and customize it(e.g.)
        <u>css/fck_editorarea.css</u><br/><br/>
    </li>
    <li>
        Create a config file under the webapp, overriding the "FCKConfig.EditorAreaCSS" property(e.g.)
        <u>js/config.js</u><br/>
        FCKConfig.EditorAreaCSS = 'http://'+ window.location.host +'/'+window.location.pathname.split("/")[1]+'/css/fck_editorarea.css' ;<br/><br/>
    </li>
    <li>
         Set the "customConfigPath" attribute to reference the custom config.js.(e.g.) <br/>
         &lt;ice:inputRichText customConfigPath="js/config.js"/&gt;
    </li>
</ol>             
             ]]>
         </description>
	<component-family>javax.faces.Input</component-family>
	<renderer-type>com.icesoft.faces.InputRichTextRenderer</renderer-type>	
	<renderer-extension>
		<instance-name>inputRichText</instance-name>
		<is-container>true</is-container>
		<renders-children>true</renders-children>
		<tag-name>inputRichText</tag-name>
		<taglib-prefix>@taglib-prefix@</taglib-prefix>
		<taglib-uri>@taglib-uri@</taglib-uri>
	</renderer-extension>
</renderer>