<!--
  ~  Version: MPL 1.1/GPL 2.0/LGPL 2.1
  ~
  ~  "The contents of this file are subject to the Mozilla Public License
  ~  Version 1.1 (the "License"); you may not use this file except in
  ~  compliance with the License. You may obtain a copy of the License at
  ~  http://www.mozilla.org/MPL/
  ~
  ~  Software distributed under the License is distributed on an "AS IS"
  ~  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  ~  License for the specific language governing rights and limitations under
  ~  the License.
  ~
  ~  The Original Code is ICEfaces 1.5 open source software code, released
  ~  November 5, 2006. The Initial Developer of the Original Code is ICEsoft
  ~  Technologies Canada, Corp. Portions created by ICEsoft are Copyright (C)
  ~  2004-2006 ICEsoft Technologies Canada, Corp. All Rights Reserved.
  ~
  ~  Contributor(s): _____________________.
  ~
  ~  Alternatively, the contents of this file may be used under the terms of
  ~  the GNU Lesser General Public License Version 2.1 or later (the "LGPL"
  ~  License), in which case the provisions of the LGPL License are
  ~  applicable instead of those above. If you wish to allow use of your
  ~  version of this file only under the terms of the LGPL License and not to
  ~  allow others to use your version of this file under the MPL, indicate
  ~  your decision by deleting the provisions above and replace them with
  ~  the notice and other provisions required by the LGPL License. If you do
  ~  not delete the provisions above, a recipient may use your version of
  ~  this file under either the MPL or the LGPL License."
  ~
  -->

<project name="component-metadata" default="jar" basedir=".">
    <property environment="env" />
    <property file="../build.properties"/>
    <property name="maven.build.output" value="target/classes" />
    <property name="project.build.directory" value="target" />
    <property name="maven.build.directory" value="target" />    
    <property name="maven.test.reports" value="${maven.build.directory}/test-reports" />
    <property name="maven.test.output" value="target/test-classes" />
    <property name="lib.dir" location="../lib" />
    <property name="project.title" value="ICEfaces components" />
    <property name="project.version" value="${version.primary}.${version.secondary}.${version.tertiary}" />
    <property name="maven.build.final.name" value="component-metadata-${project.version}" />
    <property name="project.package" value="com.icesoft" />
    <property name="project.artifact" value="component" />
    <property name="project.artifact.version" value="icefaces-webui" />
    
    <!-- todo: change package name later -->
    <property name="project.taglib.package" value="${project.package}.faces.component" />
    <property name="project.taglib.prefix" value="ice" />
    <property name="project.taglib.uri" value="http://www.icesoft.com/icefaces/component" />
    <property name="project.tld.fileName" value="icefaces_component" />
    <path id="build.classpath">
        <pathelement location="${maven.build.output}" />
        <fileset dir="${lib.dir}" includes="*.jar" excludes="jsf-api-1.2.jar,jsf-impl-1.2.jar" >
        </fileset>
    </path>
    <target name="clean" description="Clean the output directory">
        <delete dir="${maven.build.directory}" />
    </target>
    <target name="conf-changed" >
        <uptodate property="conf-uptodate" targetfile="${maven.build.directory}/generated-sources/created">
            <srcfiles dir="${maven.build.directory}/classes/conf">
                <include name="**/*.xml" />
            </srcfiles>
        </uptodate>
    </target>
    
    <target name="compile" description="Compile the code">
        <echo message="---------- ${project.title} ----------" />
        <filter token="title" value="${project.title}" />
        <filter token="package" value="${project.package}" />
        <filter token="version" value="${project.version}" />
        <filter token="project-artifact" value="${project.artifact}" />
        <filter token="taglib-prefix" value="${project.taglib.prefix}" />
        <filter token="taglib-uri" value="${project.taglib.uri}" />
        <mkdir dir="${maven.build.output}" />
        <javac destdir="${maven.build.output}" excludes="**/package.html" debug="true" deprecation="true" optimize="false">
            <src>
                <pathelement location="src/main/java" />
            </src>
            <classpath refid="build.classpath" />
        </javac>
        <copy todir="${maven.build.output}" filtering="on">
            <fileset dir="src/main/resources" />
        </copy>        
    </target>    
       
    <!-- generator -->
    <target name="generator" description="code generator" depends="conf-changed" unless="conf-uptodate">
        <!-- validate meatdata xml file -->
        <java classname="com.icesoft.faces.metadata.TestValidMetadataXML" failonerror="true" fork="true">
            <classpath refid="build.classpath" />
        </java>
        
        <!-- generate tag class -->
        <java classname="com.icesoft.metadata.generators.MetadataGenerator" failonerror="true" fork="true">
            <arg line="--tlClass" />
            <classpath refid="build.classpath" />
        </java>
        
        <!-- generate tld file -->
        <java classname="com.icesoft.metadata.generators.MetadataGenerator" failonerror="true" fork="true">
            <arg line="--tlDescriptor" />
            <classpath refid="build.classpath" />
        </java>                
        
        <!-- generate test beaninfo -->
        <java classname="com.icesoft.metadata.generators.MetadataGenerator" failonerror="true" fork="true">
            <arg line="--cpTestBeanInfo" />
            <classpath refid="build.classpath" />
        </java>
        
        <!-- generate base componenent -->
        <java classname="com.icesoft.metadata.generators.MetadataGenerator" failonerror="true" fork="true">
            <arg line="--cpClassBase" />
            <classpath refid="build.classpath" />
        </java>
        
        <!-- generate IDE beaninfo base -->
        <java classname="com.icesoft.metadata.generators.MetadataGenerator" failonerror="true" fork="true">
            <arg line="--cpBeanInfoBase" />
            <classpath refid="build.classpath" />
        </java>

        <!-- generate IDE beaninfo base -->
        <java classname="com.icesoft.jsfmeta.templates.TemplateMetadataGenerator" failonerror="true" fork="true">
            <arg line="--templateGenJsf11" />
            <classpath refid="build.classpath" />
        </java>

        <touch file="${project.build.directory}/generated-sources/created" />
    </target>
    
    <target name="jar" depends="compile,generator,test" description="Clean the JAR">
        <jar jarfile="${maven.build.directory}/${maven.build.final.name}.jar" basedir="${maven.build.output}" excludes="**/package.html" />
    </target>
    
    <target name="compile-tests" depends="junit-present, compile" description="Compile the test code" if="junit.present">
        <mkdir dir="${maven.test.output}" />
        <javac destdir="${maven.test.output}" failonerror="true" excludes="**/package.html" debug="true" deprecation="true" optimize="false">
            <src>
                <pathelement location="src/test/java" />
            </src>
            <classpath>
                <path refid="build.classpath" />
                <pathelement location="${maven.build.output}" />
            </classpath>
        </javac>
    </target>
    
    <target name="test" depends="junit-present, compile-tests" if="junit.present" description="Run the test cases">
        <mkdir dir="${maven.test.reports}" />
        <xmlvalidate file="${project.build.directory}/generated-sources/tld/icefaces_component.tld" failonerror="true">
            <dtd publicId="-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN"
                 location="src/main/resources/conf/dtd/web-jsptaglibrary_1_2.dtd"/>
        </xmlvalidate>
        <junit printSummary="yes" haltonerror="true" haltonfailure="true" fork="true" dir=".">
            <sysproperty key="basedir" value="." />
            <formatter type="plain" />
            <classpath>
                <path refid="build.classpath" />
                <pathelement location="${maven.build.output}" />
                <pathelement location="${maven.test.output}" />
            </classpath>
            <batchtest todir="${maven.test.reports}">
                <fileset dir="src/test/java">
                    <include name="**/*Test.java" />
                    <exclude name="**/*Abstract*Test.java" />
                </fileset>
            </batchtest>
        </junit>
    </target>
    
    <target name="test-junit-present" unless="skip.test">
        <available classname="junit.framework.Test" property="junit.present" />
    </target>
    <target name="junit-present" depends="test-junit-present" unless="junit.present">
        <echo>================================= WARNING ================================</echo>
        <echo> Property 'skip.test' set OR </echo>
        <echo> Junit isn&apos;t present in your $ANT_HOME/lib directory. Tests not executed. </echo>
        <echo>==========================================================================</echo>
    </target>
</project>
